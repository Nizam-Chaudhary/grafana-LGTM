configs:
  tempo_config:
    file: ./tempo.yml

  prometheus_config:
    file: ./prometheus.yml

  otel_config:
    file: ./otel-collector.yml

  loki_config:
    file: ./loki.yml

services:
  grafana:
    image: grafana/grafana:11.5.2
    secrets:
      - grafana_password
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Nizam6353
      - GF_AUTH_ANONYMOUS_ORG_NAME=passman
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      # - GF_SECURITY_ADMIN_USER_FILE=/run/secret/grafana_username
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secret/grafana_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`observe.passman.live`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      update_config:
        order: start-first
    networks:
      - web

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector.yml"]
    configs:
      - source: otel_config
        target: /etc/otel-collector.yml
    depends_on:
      - tempo
      - loki
      - prometheus
    deploy:
      update_config:
        order: start-first
    networks:
      - web

  loki:
    image: grafana/loki:2.9.2
    user: "10001"
    configs:
      - source: loki_config
        target: /etc/loki/local-config.yaml
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - loki-data:/loki
    deploy:
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      - web

  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    configs:
      - source: tempo_config
        target: /etc/tempo.yaml
    volumes:
      - tempo-data:/var/tempo
    depends_on:
      - init
    deploy:
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      - web
    command: ["-config.file=/etc/tempo.yaml"]

  prometheus:
    image: prom/prometheus:v2.47.0
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - prometheus-data:/prometheus
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    depends_on:
      - tempo
    deploy:
      update_config:
        order: start-first
    networks:
      - web

volumes:
  grafana-data:
  tempo-data:
  prometheus-data:
  loki-data:

networks:
  web:
    external: true

secrets:
  grafana_password:
    external: true
